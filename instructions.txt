Instructions:

1 - clone the git repo at https://github.com/ccdc-opensource/hotspots
2 - move to the new local repo, and checkout the v106_EBI branch
	$ git checkout v106_EBI
3 - use the environment.yaml file to create a new environment that will be called csd_hotspots
	$ conda env create -f environment.yaml
4 - change to the new environment
	$ conda activate csd_hotspots
5 - go back to the parent directory, and install the hotspots package using pip
	$ cd ..
	$ pip install ./hotspots
6 - if not already available, download ghecom from https://pdbj.org/ghecom/download_src.html and put it in a directory where it can be unpacked. Using the current latest version the commands would be:
	$ cd <wherever the ghecom package is located>
	$ tar zxvf ghecom-src-20240220.tar.gz
	$ cd src
	$ make
7 - add an environment variable for ghecom:
	$ export GHECOM_EXE=<wherever the ghecom package is located>/ghecom
8 - run the "hotspots_json_out.py" script, with the directory containing the PDB or mmCIF files as an argument
	$ python hotspots/hotspots_json_out.py <path_to_files>

The results should be a nested folder containing information about the protein's hotspots as both a csv file and a json.
There will also be another csv file containing information about the timings for different parts of the process.
This second csv file also acts as a record of the files processed so far, so if the program crashes it will check automatically to avoid repeating files. 
If you want to run the same file again you can either edit or delete this csv file.
